name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/geoterminal
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip

      - name: Check PyPI version
        id: pypi_check
        run: |
          python -m pip install --upgrade pip requests toml

          # Get current version from pyproject.toml
          LOCAL_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")

          # Get PyPI version
          PYPI_VERSION=$(python -c "import requests; print(requests.get('https://pypi.org/pypi/geoterminal/json').json()['info']['version'])")

          if [ "$PYPI_VERSION" != "$LOCAL_VERSION" ]; then
            echo "Publishing new version $LOCAL_VERSION to PyPI"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "Version $LOCAL_VERSION already exists on PyPI"
            echo "should_publish=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Install build dependencies
        if: steps.pypi_check.outputs.should_publish == 'true'
        run: pip install build

      - name: Build package
        if: steps.pypi_check.outputs.should_publish == 'true'
        run: python -m build

      - name: Publish package to PyPI
        if: steps.pypi_check.outputs.should_publish == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
